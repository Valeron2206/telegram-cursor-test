class TelegramCursorTest {
    constructor() {
        this.tg = window.Telegram?.WebApp;
        this.messageInput = null;
        this.sendButton = null;
        this.messagesArea = null;
        
        this.init();
    }
    
    init() {
        console.log('üöÄ Telegram Mini App - –¢–µ—Å—Ç –∫—É—Ä—Å–æ—Ä–∞');
        
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setup());
        } else {
            this.setup();
        }
    }
    
    setup() {
        // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        this.messageInput = document.getElementById('message-input');
        this.sendButton = document.getElementById('send-btn');
        this.messagesArea = document.getElementById('messages');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        this.initTelegram();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π
        this.setupEvents();
        
        console.log('‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –±–∞–≥–∞ –∫—É—Ä—Å–æ—Ä–∞');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            this.messageInput.focus();
        }, 1000);
    }
    
    initTelegram() {
        if (this.tg) {
            console.log('üì± Telegram WebApp –∞–∫—Ç–∏–≤–µ–Ω');
            this.tg.ready();
            this.tg.expand();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤
            this.tg.setHeaderColor('#2481cc');
            this.tg.setBackgroundColor('#17212b');
        } else {
            console.log('üåê –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (–Ω–µ Telegram)');
        }
    }
    
    setupEvents() {
        // –§–û–ö–£–° –ù–ê –ü–û–õ–ï –í–í–û–î–ê - –¢–£–¢ –ü–†–û–ò–°–•–û–î–ò–¢ –ë–ê–ì –ù–ê iOS
        this.messageInput.addEventListener('focus', () => {
            console.log('üéØ –ü–æ–ª–µ –ø–æ–ª—É—á–∏–ª–æ —Ñ–æ–∫—É—Å');
            
            if (this.isIOS() && this.tg) {
                console.log('üêõ iOS + Telegram WebApp = –ë–ê–ì –ö–£–†–°–û–†–ê!');
                console.log('–ö—É—Ä—Å–æ—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–¥–Ω—è—Ç—å—Å—è –≤—ã—à–µ –ø–æ–ª—è –≤–≤–æ–¥–∞');
                
                // –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–ú scrollIntoView - —ç—Ç–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –±–∞–≥
                // this.messageInput.scrollIntoView(); // <- –≠–¢–û –ò–°–ü–†–ê–í–ò–õ–û –ë–´ –ü–†–û–ë–õ–ï–ú–£
            }
        });
        
        // –ü–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞
        this.messageInput.addEventListener('blur', () => {
            console.log('üëã –ü–æ–ª–µ –ø–æ—Ç–µ—Ä—è–ª–æ —Ñ–æ–∫—É—Å');
        });
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.sendButton.addEventListener('click', () => {
            this.sendMessage();
        });
        
        // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        this.messageInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                this.sendMessage();
            }
        });
        
        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π viewport –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        this.monitorViewport();
    }
    
    sendMessage() {
        const text = this.messageInput.value.trim();
        if (!text) return;
        
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', text);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        this.addMessage(text, true);
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
        this.messageInput.value = '';
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å (—Ç—É—Ç —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –ø—Ä–æ—è–≤–∏—Ç—å—Å—è –±–∞–≥)
        setTimeout(() => {
            this.messageInput.focus();
        }, 100);
    }
    
    addMessage(text, isOutgoing = false) {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${isOutgoing ? 'outgoing' : 'incoming'} new`;
        
        messageDiv.innerHTML = `
            <div class="message-bubble">${text}</div>
        `;
        
        this.messagesArea.appendChild(messageDiv);
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        setTimeout(() => {
            this.messagesArea.scrollTop = this.messagesArea.scrollHeight;
        }, 100);
    }
    
    monitorViewport() {
        if (window.visualViewport) {
            window.visualViewport.addEventListener('resize', () => {
                const keyboardHeight = window.innerHeight - window.visualViewport.height;
                console.log('‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:', keyboardHeight > 0 ? `–≤—ã—Å–æ—Ç–∞ ${keyboardHeight}px` : '—Å–∫—Ä—ã—Ç–∞');
                
                if (keyboardHeight > 0 && this.isIOS()) {
                    console.log('üêõ –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞ iOS –∫—É—Ä—Å–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –ø–æ–ª—è –≤–≤–æ–¥–∞!');
                }
            });
        }
    }
    
    isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
new TelegramCursorTest();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
window.addEventListener('error', (e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', e.error);
});

console.log('üì± –¢–µ—Å—Ç –±–∞–≥–∞ –∫—É—Ä—Å–æ—Ä–∞ –≤ Telegram Mini App');
console.log('üéØ –ù–∞ iPhone: –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –∫—É—Ä—Å–æ—Ä —É–µ–¥–µ—Ç –≤—ã—à–µ!');
console.log('üîß –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å - –ø—Ä–æ—Å–∫—Ä–æ–ª–ª–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ scrollIntoView()');